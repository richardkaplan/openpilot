#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2195801997734315225) {
   out_2195801997734315225[0] = 0;
   out_2195801997734315225[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2195801997734315225[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2195801997734315225[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2195801997734315225[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2195801997734315225[5] = -sin(in_vec[1]);
   out_2195801997734315225[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2195801997734315225[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2195801997734315225[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2195801997734315225[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2195801997734315225[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2195801997734315225[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2195801997734315225[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2195801997734315225[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2195801997734315225[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2195801997734315225[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2195801997734315225[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2195801997734315225[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7885382450672140263) {
   out_7885382450672140263[0] = delta_x[0] + nom_x[0];
   out_7885382450672140263[1] = delta_x[1] + nom_x[1];
   out_7885382450672140263[2] = delta_x[2] + nom_x[2];
   out_7885382450672140263[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7885382450672140263[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7885382450672140263[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7885382450672140263[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7885382450672140263[7] = delta_x[6] + nom_x[7];
   out_7885382450672140263[8] = delta_x[7] + nom_x[8];
   out_7885382450672140263[9] = delta_x[8] + nom_x[9];
   out_7885382450672140263[10] = delta_x[9] + nom_x[10];
   out_7885382450672140263[11] = delta_x[10] + nom_x[11];
   out_7885382450672140263[12] = delta_x[11] + nom_x[12];
   out_7885382450672140263[13] = delta_x[12] + nom_x[13];
   out_7885382450672140263[14] = delta_x[13] + nom_x[14];
   out_7885382450672140263[15] = delta_x[14] + nom_x[15];
   out_7885382450672140263[16] = delta_x[15] + nom_x[16];
   out_7885382450672140263[17] = delta_x[16] + nom_x[17];
   out_7885382450672140263[18] = delta_x[17] + nom_x[18];
   out_7885382450672140263[19] = delta_x[18] + nom_x[19];
   out_7885382450672140263[20] = delta_x[19] + nom_x[20];
   out_7885382450672140263[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8328284484611196913) {
   out_8328284484611196913[0] = -nom_x[0] + true_x[0];
   out_8328284484611196913[1] = -nom_x[1] + true_x[1];
   out_8328284484611196913[2] = -nom_x[2] + true_x[2];
   out_8328284484611196913[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8328284484611196913[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8328284484611196913[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8328284484611196913[6] = -nom_x[7] + true_x[7];
   out_8328284484611196913[7] = -nom_x[8] + true_x[8];
   out_8328284484611196913[8] = -nom_x[9] + true_x[9];
   out_8328284484611196913[9] = -nom_x[10] + true_x[10];
   out_8328284484611196913[10] = -nom_x[11] + true_x[11];
   out_8328284484611196913[11] = -nom_x[12] + true_x[12];
   out_8328284484611196913[12] = -nom_x[13] + true_x[13];
   out_8328284484611196913[13] = -nom_x[14] + true_x[14];
   out_8328284484611196913[14] = -nom_x[15] + true_x[15];
   out_8328284484611196913[15] = -nom_x[16] + true_x[16];
   out_8328284484611196913[16] = -nom_x[17] + true_x[17];
   out_8328284484611196913[17] = -nom_x[18] + true_x[18];
   out_8328284484611196913[18] = -nom_x[19] + true_x[19];
   out_8328284484611196913[19] = -nom_x[20] + true_x[20];
   out_8328284484611196913[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6275450067896889819) {
   out_6275450067896889819[0] = 1.0;
   out_6275450067896889819[1] = 0;
   out_6275450067896889819[2] = 0;
   out_6275450067896889819[3] = 0;
   out_6275450067896889819[4] = 0;
   out_6275450067896889819[5] = 0;
   out_6275450067896889819[6] = 0;
   out_6275450067896889819[7] = 0;
   out_6275450067896889819[8] = 0;
   out_6275450067896889819[9] = 0;
   out_6275450067896889819[10] = 0;
   out_6275450067896889819[11] = 0;
   out_6275450067896889819[12] = 0;
   out_6275450067896889819[13] = 0;
   out_6275450067896889819[14] = 0;
   out_6275450067896889819[15] = 0;
   out_6275450067896889819[16] = 0;
   out_6275450067896889819[17] = 0;
   out_6275450067896889819[18] = 0;
   out_6275450067896889819[19] = 0;
   out_6275450067896889819[20] = 0;
   out_6275450067896889819[21] = 0;
   out_6275450067896889819[22] = 1.0;
   out_6275450067896889819[23] = 0;
   out_6275450067896889819[24] = 0;
   out_6275450067896889819[25] = 0;
   out_6275450067896889819[26] = 0;
   out_6275450067896889819[27] = 0;
   out_6275450067896889819[28] = 0;
   out_6275450067896889819[29] = 0;
   out_6275450067896889819[30] = 0;
   out_6275450067896889819[31] = 0;
   out_6275450067896889819[32] = 0;
   out_6275450067896889819[33] = 0;
   out_6275450067896889819[34] = 0;
   out_6275450067896889819[35] = 0;
   out_6275450067896889819[36] = 0;
   out_6275450067896889819[37] = 0;
   out_6275450067896889819[38] = 0;
   out_6275450067896889819[39] = 0;
   out_6275450067896889819[40] = 0;
   out_6275450067896889819[41] = 0;
   out_6275450067896889819[42] = 0;
   out_6275450067896889819[43] = 0;
   out_6275450067896889819[44] = 1.0;
   out_6275450067896889819[45] = 0;
   out_6275450067896889819[46] = 0;
   out_6275450067896889819[47] = 0;
   out_6275450067896889819[48] = 0;
   out_6275450067896889819[49] = 0;
   out_6275450067896889819[50] = 0;
   out_6275450067896889819[51] = 0;
   out_6275450067896889819[52] = 0;
   out_6275450067896889819[53] = 0;
   out_6275450067896889819[54] = 0;
   out_6275450067896889819[55] = 0;
   out_6275450067896889819[56] = 0;
   out_6275450067896889819[57] = 0;
   out_6275450067896889819[58] = 0;
   out_6275450067896889819[59] = 0;
   out_6275450067896889819[60] = 0;
   out_6275450067896889819[61] = 0;
   out_6275450067896889819[62] = 0;
   out_6275450067896889819[63] = 0;
   out_6275450067896889819[64] = 0;
   out_6275450067896889819[65] = 0;
   out_6275450067896889819[66] = -0.5*state[4];
   out_6275450067896889819[67] = -0.5*state[5];
   out_6275450067896889819[68] = -0.5*state[6];
   out_6275450067896889819[69] = 0;
   out_6275450067896889819[70] = 0;
   out_6275450067896889819[71] = 0;
   out_6275450067896889819[72] = 0;
   out_6275450067896889819[73] = 0;
   out_6275450067896889819[74] = 0;
   out_6275450067896889819[75] = 0;
   out_6275450067896889819[76] = 0;
   out_6275450067896889819[77] = 0;
   out_6275450067896889819[78] = 0;
   out_6275450067896889819[79] = 0;
   out_6275450067896889819[80] = 0;
   out_6275450067896889819[81] = 0;
   out_6275450067896889819[82] = 0;
   out_6275450067896889819[83] = 0;
   out_6275450067896889819[84] = 0;
   out_6275450067896889819[85] = 0;
   out_6275450067896889819[86] = 0;
   out_6275450067896889819[87] = 0.5*state[3];
   out_6275450067896889819[88] = 0.5*state[6];
   out_6275450067896889819[89] = -0.5*state[5];
   out_6275450067896889819[90] = 0;
   out_6275450067896889819[91] = 0;
   out_6275450067896889819[92] = 0;
   out_6275450067896889819[93] = 0;
   out_6275450067896889819[94] = 0;
   out_6275450067896889819[95] = 0;
   out_6275450067896889819[96] = 0;
   out_6275450067896889819[97] = 0;
   out_6275450067896889819[98] = 0;
   out_6275450067896889819[99] = 0;
   out_6275450067896889819[100] = 0;
   out_6275450067896889819[101] = 0;
   out_6275450067896889819[102] = 0;
   out_6275450067896889819[103] = 0;
   out_6275450067896889819[104] = 0;
   out_6275450067896889819[105] = 0;
   out_6275450067896889819[106] = 0;
   out_6275450067896889819[107] = 0;
   out_6275450067896889819[108] = -0.5*state[6];
   out_6275450067896889819[109] = 0.5*state[3];
   out_6275450067896889819[110] = 0.5*state[4];
   out_6275450067896889819[111] = 0;
   out_6275450067896889819[112] = 0;
   out_6275450067896889819[113] = 0;
   out_6275450067896889819[114] = 0;
   out_6275450067896889819[115] = 0;
   out_6275450067896889819[116] = 0;
   out_6275450067896889819[117] = 0;
   out_6275450067896889819[118] = 0;
   out_6275450067896889819[119] = 0;
   out_6275450067896889819[120] = 0;
   out_6275450067896889819[121] = 0;
   out_6275450067896889819[122] = 0;
   out_6275450067896889819[123] = 0;
   out_6275450067896889819[124] = 0;
   out_6275450067896889819[125] = 0;
   out_6275450067896889819[126] = 0;
   out_6275450067896889819[127] = 0;
   out_6275450067896889819[128] = 0;
   out_6275450067896889819[129] = 0.5*state[5];
   out_6275450067896889819[130] = -0.5*state[4];
   out_6275450067896889819[131] = 0.5*state[3];
   out_6275450067896889819[132] = 0;
   out_6275450067896889819[133] = 0;
   out_6275450067896889819[134] = 0;
   out_6275450067896889819[135] = 0;
   out_6275450067896889819[136] = 0;
   out_6275450067896889819[137] = 0;
   out_6275450067896889819[138] = 0;
   out_6275450067896889819[139] = 0;
   out_6275450067896889819[140] = 0;
   out_6275450067896889819[141] = 0;
   out_6275450067896889819[142] = 0;
   out_6275450067896889819[143] = 0;
   out_6275450067896889819[144] = 0;
   out_6275450067896889819[145] = 0;
   out_6275450067896889819[146] = 0;
   out_6275450067896889819[147] = 0;
   out_6275450067896889819[148] = 0;
   out_6275450067896889819[149] = 0;
   out_6275450067896889819[150] = 0;
   out_6275450067896889819[151] = 0;
   out_6275450067896889819[152] = 0;
   out_6275450067896889819[153] = 1.0;
   out_6275450067896889819[154] = 0;
   out_6275450067896889819[155] = 0;
   out_6275450067896889819[156] = 0;
   out_6275450067896889819[157] = 0;
   out_6275450067896889819[158] = 0;
   out_6275450067896889819[159] = 0;
   out_6275450067896889819[160] = 0;
   out_6275450067896889819[161] = 0;
   out_6275450067896889819[162] = 0;
   out_6275450067896889819[163] = 0;
   out_6275450067896889819[164] = 0;
   out_6275450067896889819[165] = 0;
   out_6275450067896889819[166] = 0;
   out_6275450067896889819[167] = 0;
   out_6275450067896889819[168] = 0;
   out_6275450067896889819[169] = 0;
   out_6275450067896889819[170] = 0;
   out_6275450067896889819[171] = 0;
   out_6275450067896889819[172] = 0;
   out_6275450067896889819[173] = 0;
   out_6275450067896889819[174] = 0;
   out_6275450067896889819[175] = 1.0;
   out_6275450067896889819[176] = 0;
   out_6275450067896889819[177] = 0;
   out_6275450067896889819[178] = 0;
   out_6275450067896889819[179] = 0;
   out_6275450067896889819[180] = 0;
   out_6275450067896889819[181] = 0;
   out_6275450067896889819[182] = 0;
   out_6275450067896889819[183] = 0;
   out_6275450067896889819[184] = 0;
   out_6275450067896889819[185] = 0;
   out_6275450067896889819[186] = 0;
   out_6275450067896889819[187] = 0;
   out_6275450067896889819[188] = 0;
   out_6275450067896889819[189] = 0;
   out_6275450067896889819[190] = 0;
   out_6275450067896889819[191] = 0;
   out_6275450067896889819[192] = 0;
   out_6275450067896889819[193] = 0;
   out_6275450067896889819[194] = 0;
   out_6275450067896889819[195] = 0;
   out_6275450067896889819[196] = 0;
   out_6275450067896889819[197] = 1.0;
   out_6275450067896889819[198] = 0;
   out_6275450067896889819[199] = 0;
   out_6275450067896889819[200] = 0;
   out_6275450067896889819[201] = 0;
   out_6275450067896889819[202] = 0;
   out_6275450067896889819[203] = 0;
   out_6275450067896889819[204] = 0;
   out_6275450067896889819[205] = 0;
   out_6275450067896889819[206] = 0;
   out_6275450067896889819[207] = 0;
   out_6275450067896889819[208] = 0;
   out_6275450067896889819[209] = 0;
   out_6275450067896889819[210] = 0;
   out_6275450067896889819[211] = 0;
   out_6275450067896889819[212] = 0;
   out_6275450067896889819[213] = 0;
   out_6275450067896889819[214] = 0;
   out_6275450067896889819[215] = 0;
   out_6275450067896889819[216] = 0;
   out_6275450067896889819[217] = 0;
   out_6275450067896889819[218] = 0;
   out_6275450067896889819[219] = 1.0;
   out_6275450067896889819[220] = 0;
   out_6275450067896889819[221] = 0;
   out_6275450067896889819[222] = 0;
   out_6275450067896889819[223] = 0;
   out_6275450067896889819[224] = 0;
   out_6275450067896889819[225] = 0;
   out_6275450067896889819[226] = 0;
   out_6275450067896889819[227] = 0;
   out_6275450067896889819[228] = 0;
   out_6275450067896889819[229] = 0;
   out_6275450067896889819[230] = 0;
   out_6275450067896889819[231] = 0;
   out_6275450067896889819[232] = 0;
   out_6275450067896889819[233] = 0;
   out_6275450067896889819[234] = 0;
   out_6275450067896889819[235] = 0;
   out_6275450067896889819[236] = 0;
   out_6275450067896889819[237] = 0;
   out_6275450067896889819[238] = 0;
   out_6275450067896889819[239] = 0;
   out_6275450067896889819[240] = 0;
   out_6275450067896889819[241] = 1.0;
   out_6275450067896889819[242] = 0;
   out_6275450067896889819[243] = 0;
   out_6275450067896889819[244] = 0;
   out_6275450067896889819[245] = 0;
   out_6275450067896889819[246] = 0;
   out_6275450067896889819[247] = 0;
   out_6275450067896889819[248] = 0;
   out_6275450067896889819[249] = 0;
   out_6275450067896889819[250] = 0;
   out_6275450067896889819[251] = 0;
   out_6275450067896889819[252] = 0;
   out_6275450067896889819[253] = 0;
   out_6275450067896889819[254] = 0;
   out_6275450067896889819[255] = 0;
   out_6275450067896889819[256] = 0;
   out_6275450067896889819[257] = 0;
   out_6275450067896889819[258] = 0;
   out_6275450067896889819[259] = 0;
   out_6275450067896889819[260] = 0;
   out_6275450067896889819[261] = 0;
   out_6275450067896889819[262] = 0;
   out_6275450067896889819[263] = 1.0;
   out_6275450067896889819[264] = 0;
   out_6275450067896889819[265] = 0;
   out_6275450067896889819[266] = 0;
   out_6275450067896889819[267] = 0;
   out_6275450067896889819[268] = 0;
   out_6275450067896889819[269] = 0;
   out_6275450067896889819[270] = 0;
   out_6275450067896889819[271] = 0;
   out_6275450067896889819[272] = 0;
   out_6275450067896889819[273] = 0;
   out_6275450067896889819[274] = 0;
   out_6275450067896889819[275] = 0;
   out_6275450067896889819[276] = 0;
   out_6275450067896889819[277] = 0;
   out_6275450067896889819[278] = 0;
   out_6275450067896889819[279] = 0;
   out_6275450067896889819[280] = 0;
   out_6275450067896889819[281] = 0;
   out_6275450067896889819[282] = 0;
   out_6275450067896889819[283] = 0;
   out_6275450067896889819[284] = 0;
   out_6275450067896889819[285] = 1.0;
   out_6275450067896889819[286] = 0;
   out_6275450067896889819[287] = 0;
   out_6275450067896889819[288] = 0;
   out_6275450067896889819[289] = 0;
   out_6275450067896889819[290] = 0;
   out_6275450067896889819[291] = 0;
   out_6275450067896889819[292] = 0;
   out_6275450067896889819[293] = 0;
   out_6275450067896889819[294] = 0;
   out_6275450067896889819[295] = 0;
   out_6275450067896889819[296] = 0;
   out_6275450067896889819[297] = 0;
   out_6275450067896889819[298] = 0;
   out_6275450067896889819[299] = 0;
   out_6275450067896889819[300] = 0;
   out_6275450067896889819[301] = 0;
   out_6275450067896889819[302] = 0;
   out_6275450067896889819[303] = 0;
   out_6275450067896889819[304] = 0;
   out_6275450067896889819[305] = 0;
   out_6275450067896889819[306] = 0;
   out_6275450067896889819[307] = 1.0;
   out_6275450067896889819[308] = 0;
   out_6275450067896889819[309] = 0;
   out_6275450067896889819[310] = 0;
   out_6275450067896889819[311] = 0;
   out_6275450067896889819[312] = 0;
   out_6275450067896889819[313] = 0;
   out_6275450067896889819[314] = 0;
   out_6275450067896889819[315] = 0;
   out_6275450067896889819[316] = 0;
   out_6275450067896889819[317] = 0;
   out_6275450067896889819[318] = 0;
   out_6275450067896889819[319] = 0;
   out_6275450067896889819[320] = 0;
   out_6275450067896889819[321] = 0;
   out_6275450067896889819[322] = 0;
   out_6275450067896889819[323] = 0;
   out_6275450067896889819[324] = 0;
   out_6275450067896889819[325] = 0;
   out_6275450067896889819[326] = 0;
   out_6275450067896889819[327] = 0;
   out_6275450067896889819[328] = 0;
   out_6275450067896889819[329] = 1.0;
   out_6275450067896889819[330] = 0;
   out_6275450067896889819[331] = 0;
   out_6275450067896889819[332] = 0;
   out_6275450067896889819[333] = 0;
   out_6275450067896889819[334] = 0;
   out_6275450067896889819[335] = 0;
   out_6275450067896889819[336] = 0;
   out_6275450067896889819[337] = 0;
   out_6275450067896889819[338] = 0;
   out_6275450067896889819[339] = 0;
   out_6275450067896889819[340] = 0;
   out_6275450067896889819[341] = 0;
   out_6275450067896889819[342] = 0;
   out_6275450067896889819[343] = 0;
   out_6275450067896889819[344] = 0;
   out_6275450067896889819[345] = 0;
   out_6275450067896889819[346] = 0;
   out_6275450067896889819[347] = 0;
   out_6275450067896889819[348] = 0;
   out_6275450067896889819[349] = 0;
   out_6275450067896889819[350] = 0;
   out_6275450067896889819[351] = 1.0;
   out_6275450067896889819[352] = 0;
   out_6275450067896889819[353] = 0;
   out_6275450067896889819[354] = 0;
   out_6275450067896889819[355] = 0;
   out_6275450067896889819[356] = 0;
   out_6275450067896889819[357] = 0;
   out_6275450067896889819[358] = 0;
   out_6275450067896889819[359] = 0;
   out_6275450067896889819[360] = 0;
   out_6275450067896889819[361] = 0;
   out_6275450067896889819[362] = 0;
   out_6275450067896889819[363] = 0;
   out_6275450067896889819[364] = 0;
   out_6275450067896889819[365] = 0;
   out_6275450067896889819[366] = 0;
   out_6275450067896889819[367] = 0;
   out_6275450067896889819[368] = 0;
   out_6275450067896889819[369] = 0;
   out_6275450067896889819[370] = 0;
   out_6275450067896889819[371] = 0;
   out_6275450067896889819[372] = 0;
   out_6275450067896889819[373] = 1.0;
   out_6275450067896889819[374] = 0;
   out_6275450067896889819[375] = 0;
   out_6275450067896889819[376] = 0;
   out_6275450067896889819[377] = 0;
   out_6275450067896889819[378] = 0;
   out_6275450067896889819[379] = 0;
   out_6275450067896889819[380] = 0;
   out_6275450067896889819[381] = 0;
   out_6275450067896889819[382] = 0;
   out_6275450067896889819[383] = 0;
   out_6275450067896889819[384] = 0;
   out_6275450067896889819[385] = 0;
   out_6275450067896889819[386] = 0;
   out_6275450067896889819[387] = 0;
   out_6275450067896889819[388] = 0;
   out_6275450067896889819[389] = 0;
   out_6275450067896889819[390] = 0;
   out_6275450067896889819[391] = 0;
   out_6275450067896889819[392] = 0;
   out_6275450067896889819[393] = 0;
   out_6275450067896889819[394] = 0;
   out_6275450067896889819[395] = 1.0;
   out_6275450067896889819[396] = 0;
   out_6275450067896889819[397] = 0;
   out_6275450067896889819[398] = 0;
   out_6275450067896889819[399] = 0;
   out_6275450067896889819[400] = 0;
   out_6275450067896889819[401] = 0;
   out_6275450067896889819[402] = 0;
   out_6275450067896889819[403] = 0;
   out_6275450067896889819[404] = 0;
   out_6275450067896889819[405] = 0;
   out_6275450067896889819[406] = 0;
   out_6275450067896889819[407] = 0;
   out_6275450067896889819[408] = 0;
   out_6275450067896889819[409] = 0;
   out_6275450067896889819[410] = 0;
   out_6275450067896889819[411] = 0;
   out_6275450067896889819[412] = 0;
   out_6275450067896889819[413] = 0;
   out_6275450067896889819[414] = 0;
   out_6275450067896889819[415] = 0;
   out_6275450067896889819[416] = 0;
   out_6275450067896889819[417] = 1.0;
   out_6275450067896889819[418] = 0;
   out_6275450067896889819[419] = 0;
   out_6275450067896889819[420] = 0;
   out_6275450067896889819[421] = 0;
   out_6275450067896889819[422] = 0;
   out_6275450067896889819[423] = 0;
   out_6275450067896889819[424] = 0;
   out_6275450067896889819[425] = 0;
   out_6275450067896889819[426] = 0;
   out_6275450067896889819[427] = 0;
   out_6275450067896889819[428] = 0;
   out_6275450067896889819[429] = 0;
   out_6275450067896889819[430] = 0;
   out_6275450067896889819[431] = 0;
   out_6275450067896889819[432] = 0;
   out_6275450067896889819[433] = 0;
   out_6275450067896889819[434] = 0;
   out_6275450067896889819[435] = 0;
   out_6275450067896889819[436] = 0;
   out_6275450067896889819[437] = 0;
   out_6275450067896889819[438] = 0;
   out_6275450067896889819[439] = 1.0;
   out_6275450067896889819[440] = 0;
   out_6275450067896889819[441] = 0;
   out_6275450067896889819[442] = 0;
   out_6275450067896889819[443] = 0;
   out_6275450067896889819[444] = 0;
   out_6275450067896889819[445] = 0;
   out_6275450067896889819[446] = 0;
   out_6275450067896889819[447] = 0;
   out_6275450067896889819[448] = 0;
   out_6275450067896889819[449] = 0;
   out_6275450067896889819[450] = 0;
   out_6275450067896889819[451] = 0;
   out_6275450067896889819[452] = 0;
   out_6275450067896889819[453] = 0;
   out_6275450067896889819[454] = 0;
   out_6275450067896889819[455] = 0;
   out_6275450067896889819[456] = 0;
   out_6275450067896889819[457] = 0;
   out_6275450067896889819[458] = 0;
   out_6275450067896889819[459] = 0;
   out_6275450067896889819[460] = 0;
   out_6275450067896889819[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_602314135086256032) {
   out_602314135086256032[0] = dt*state[7] + state[0];
   out_602314135086256032[1] = dt*state[8] + state[1];
   out_602314135086256032[2] = dt*state[9] + state[2];
   out_602314135086256032[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_602314135086256032[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_602314135086256032[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_602314135086256032[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_602314135086256032[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_602314135086256032[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_602314135086256032[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_602314135086256032[10] = state[10];
   out_602314135086256032[11] = state[11];
   out_602314135086256032[12] = state[12];
   out_602314135086256032[13] = state[13];
   out_602314135086256032[14] = state[14];
   out_602314135086256032[15] = state[15];
   out_602314135086256032[16] = state[16];
   out_602314135086256032[17] = state[17];
   out_602314135086256032[18] = state[18];
   out_602314135086256032[19] = state[19];
   out_602314135086256032[20] = state[20];
   out_602314135086256032[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8785245154925367845) {
   out_8785245154925367845[0] = 1;
   out_8785245154925367845[1] = 0;
   out_8785245154925367845[2] = 0;
   out_8785245154925367845[3] = 0;
   out_8785245154925367845[4] = 0;
   out_8785245154925367845[5] = 0;
   out_8785245154925367845[6] = dt;
   out_8785245154925367845[7] = 0;
   out_8785245154925367845[8] = 0;
   out_8785245154925367845[9] = 0;
   out_8785245154925367845[10] = 0;
   out_8785245154925367845[11] = 0;
   out_8785245154925367845[12] = 0;
   out_8785245154925367845[13] = 0;
   out_8785245154925367845[14] = 0;
   out_8785245154925367845[15] = 0;
   out_8785245154925367845[16] = 0;
   out_8785245154925367845[17] = 0;
   out_8785245154925367845[18] = 0;
   out_8785245154925367845[19] = 0;
   out_8785245154925367845[20] = 0;
   out_8785245154925367845[21] = 0;
   out_8785245154925367845[22] = 1;
   out_8785245154925367845[23] = 0;
   out_8785245154925367845[24] = 0;
   out_8785245154925367845[25] = 0;
   out_8785245154925367845[26] = 0;
   out_8785245154925367845[27] = 0;
   out_8785245154925367845[28] = dt;
   out_8785245154925367845[29] = 0;
   out_8785245154925367845[30] = 0;
   out_8785245154925367845[31] = 0;
   out_8785245154925367845[32] = 0;
   out_8785245154925367845[33] = 0;
   out_8785245154925367845[34] = 0;
   out_8785245154925367845[35] = 0;
   out_8785245154925367845[36] = 0;
   out_8785245154925367845[37] = 0;
   out_8785245154925367845[38] = 0;
   out_8785245154925367845[39] = 0;
   out_8785245154925367845[40] = 0;
   out_8785245154925367845[41] = 0;
   out_8785245154925367845[42] = 0;
   out_8785245154925367845[43] = 0;
   out_8785245154925367845[44] = 1;
   out_8785245154925367845[45] = 0;
   out_8785245154925367845[46] = 0;
   out_8785245154925367845[47] = 0;
   out_8785245154925367845[48] = 0;
   out_8785245154925367845[49] = 0;
   out_8785245154925367845[50] = dt;
   out_8785245154925367845[51] = 0;
   out_8785245154925367845[52] = 0;
   out_8785245154925367845[53] = 0;
   out_8785245154925367845[54] = 0;
   out_8785245154925367845[55] = 0;
   out_8785245154925367845[56] = 0;
   out_8785245154925367845[57] = 0;
   out_8785245154925367845[58] = 0;
   out_8785245154925367845[59] = 0;
   out_8785245154925367845[60] = 0;
   out_8785245154925367845[61] = 0;
   out_8785245154925367845[62] = 0;
   out_8785245154925367845[63] = 0;
   out_8785245154925367845[64] = 0;
   out_8785245154925367845[65] = 0;
   out_8785245154925367845[66] = 1;
   out_8785245154925367845[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8785245154925367845[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8785245154925367845[69] = 0;
   out_8785245154925367845[70] = 0;
   out_8785245154925367845[71] = 0;
   out_8785245154925367845[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8785245154925367845[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8785245154925367845[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8785245154925367845[75] = 0;
   out_8785245154925367845[76] = 0;
   out_8785245154925367845[77] = 0;
   out_8785245154925367845[78] = 0;
   out_8785245154925367845[79] = 0;
   out_8785245154925367845[80] = 0;
   out_8785245154925367845[81] = 0;
   out_8785245154925367845[82] = 0;
   out_8785245154925367845[83] = 0;
   out_8785245154925367845[84] = 0;
   out_8785245154925367845[85] = 0;
   out_8785245154925367845[86] = 0;
   out_8785245154925367845[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8785245154925367845[88] = 1;
   out_8785245154925367845[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8785245154925367845[90] = 0;
   out_8785245154925367845[91] = 0;
   out_8785245154925367845[92] = 0;
   out_8785245154925367845[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8785245154925367845[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8785245154925367845[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8785245154925367845[96] = 0;
   out_8785245154925367845[97] = 0;
   out_8785245154925367845[98] = 0;
   out_8785245154925367845[99] = 0;
   out_8785245154925367845[100] = 0;
   out_8785245154925367845[101] = 0;
   out_8785245154925367845[102] = 0;
   out_8785245154925367845[103] = 0;
   out_8785245154925367845[104] = 0;
   out_8785245154925367845[105] = 0;
   out_8785245154925367845[106] = 0;
   out_8785245154925367845[107] = 0;
   out_8785245154925367845[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8785245154925367845[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8785245154925367845[110] = 1;
   out_8785245154925367845[111] = 0;
   out_8785245154925367845[112] = 0;
   out_8785245154925367845[113] = 0;
   out_8785245154925367845[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8785245154925367845[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8785245154925367845[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8785245154925367845[117] = 0;
   out_8785245154925367845[118] = 0;
   out_8785245154925367845[119] = 0;
   out_8785245154925367845[120] = 0;
   out_8785245154925367845[121] = 0;
   out_8785245154925367845[122] = 0;
   out_8785245154925367845[123] = 0;
   out_8785245154925367845[124] = 0;
   out_8785245154925367845[125] = 0;
   out_8785245154925367845[126] = 0;
   out_8785245154925367845[127] = 0;
   out_8785245154925367845[128] = 0;
   out_8785245154925367845[129] = 0;
   out_8785245154925367845[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8785245154925367845[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8785245154925367845[132] = 1;
   out_8785245154925367845[133] = 0;
   out_8785245154925367845[134] = 0;
   out_8785245154925367845[135] = 0;
   out_8785245154925367845[136] = 0;
   out_8785245154925367845[137] = 0;
   out_8785245154925367845[138] = 0;
   out_8785245154925367845[139] = 0;
   out_8785245154925367845[140] = 0;
   out_8785245154925367845[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8785245154925367845[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8785245154925367845[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8785245154925367845[144] = 0;
   out_8785245154925367845[145] = 0;
   out_8785245154925367845[146] = 0;
   out_8785245154925367845[147] = 0;
   out_8785245154925367845[148] = 0;
   out_8785245154925367845[149] = 0;
   out_8785245154925367845[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8785245154925367845[151] = 0;
   out_8785245154925367845[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8785245154925367845[153] = 0;
   out_8785245154925367845[154] = 1;
   out_8785245154925367845[155] = 0;
   out_8785245154925367845[156] = 0;
   out_8785245154925367845[157] = 0;
   out_8785245154925367845[158] = 0;
   out_8785245154925367845[159] = 0;
   out_8785245154925367845[160] = 0;
   out_8785245154925367845[161] = 0;
   out_8785245154925367845[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8785245154925367845[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8785245154925367845[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8785245154925367845[165] = 0;
   out_8785245154925367845[166] = 0;
   out_8785245154925367845[167] = 0;
   out_8785245154925367845[168] = 0;
   out_8785245154925367845[169] = 0;
   out_8785245154925367845[170] = 0;
   out_8785245154925367845[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8785245154925367845[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8785245154925367845[173] = 0;
   out_8785245154925367845[174] = 0;
   out_8785245154925367845[175] = 0;
   out_8785245154925367845[176] = 1;
   out_8785245154925367845[177] = 0;
   out_8785245154925367845[178] = 0;
   out_8785245154925367845[179] = 0;
   out_8785245154925367845[180] = 0;
   out_8785245154925367845[181] = 0;
   out_8785245154925367845[182] = 0;
   out_8785245154925367845[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8785245154925367845[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8785245154925367845[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8785245154925367845[186] = 0;
   out_8785245154925367845[187] = 0;
   out_8785245154925367845[188] = 0;
   out_8785245154925367845[189] = 0;
   out_8785245154925367845[190] = 0;
   out_8785245154925367845[191] = 0;
   out_8785245154925367845[192] = 0;
   out_8785245154925367845[193] = 0;
   out_8785245154925367845[194] = 0;
   out_8785245154925367845[195] = 0;
   out_8785245154925367845[196] = 0;
   out_8785245154925367845[197] = 0;
   out_8785245154925367845[198] = 1;
   out_8785245154925367845[199] = 0;
   out_8785245154925367845[200] = 0;
   out_8785245154925367845[201] = 0;
   out_8785245154925367845[202] = 0;
   out_8785245154925367845[203] = 0;
   out_8785245154925367845[204] = 0;
   out_8785245154925367845[205] = 0;
   out_8785245154925367845[206] = 0;
   out_8785245154925367845[207] = 0;
   out_8785245154925367845[208] = 0;
   out_8785245154925367845[209] = 0;
   out_8785245154925367845[210] = 0;
   out_8785245154925367845[211] = 0;
   out_8785245154925367845[212] = 0;
   out_8785245154925367845[213] = 0;
   out_8785245154925367845[214] = 0;
   out_8785245154925367845[215] = 0;
   out_8785245154925367845[216] = 0;
   out_8785245154925367845[217] = 0;
   out_8785245154925367845[218] = 0;
   out_8785245154925367845[219] = 0;
   out_8785245154925367845[220] = 1;
   out_8785245154925367845[221] = 0;
   out_8785245154925367845[222] = 0;
   out_8785245154925367845[223] = 0;
   out_8785245154925367845[224] = 0;
   out_8785245154925367845[225] = 0;
   out_8785245154925367845[226] = 0;
   out_8785245154925367845[227] = 0;
   out_8785245154925367845[228] = 0;
   out_8785245154925367845[229] = 0;
   out_8785245154925367845[230] = 0;
   out_8785245154925367845[231] = 0;
   out_8785245154925367845[232] = 0;
   out_8785245154925367845[233] = 0;
   out_8785245154925367845[234] = 0;
   out_8785245154925367845[235] = 0;
   out_8785245154925367845[236] = 0;
   out_8785245154925367845[237] = 0;
   out_8785245154925367845[238] = 0;
   out_8785245154925367845[239] = 0;
   out_8785245154925367845[240] = 0;
   out_8785245154925367845[241] = 0;
   out_8785245154925367845[242] = 1;
   out_8785245154925367845[243] = 0;
   out_8785245154925367845[244] = 0;
   out_8785245154925367845[245] = 0;
   out_8785245154925367845[246] = 0;
   out_8785245154925367845[247] = 0;
   out_8785245154925367845[248] = 0;
   out_8785245154925367845[249] = 0;
   out_8785245154925367845[250] = 0;
   out_8785245154925367845[251] = 0;
   out_8785245154925367845[252] = 0;
   out_8785245154925367845[253] = 0;
   out_8785245154925367845[254] = 0;
   out_8785245154925367845[255] = 0;
   out_8785245154925367845[256] = 0;
   out_8785245154925367845[257] = 0;
   out_8785245154925367845[258] = 0;
   out_8785245154925367845[259] = 0;
   out_8785245154925367845[260] = 0;
   out_8785245154925367845[261] = 0;
   out_8785245154925367845[262] = 0;
   out_8785245154925367845[263] = 0;
   out_8785245154925367845[264] = 1;
   out_8785245154925367845[265] = 0;
   out_8785245154925367845[266] = 0;
   out_8785245154925367845[267] = 0;
   out_8785245154925367845[268] = 0;
   out_8785245154925367845[269] = 0;
   out_8785245154925367845[270] = 0;
   out_8785245154925367845[271] = 0;
   out_8785245154925367845[272] = 0;
   out_8785245154925367845[273] = 0;
   out_8785245154925367845[274] = 0;
   out_8785245154925367845[275] = 0;
   out_8785245154925367845[276] = 0;
   out_8785245154925367845[277] = 0;
   out_8785245154925367845[278] = 0;
   out_8785245154925367845[279] = 0;
   out_8785245154925367845[280] = 0;
   out_8785245154925367845[281] = 0;
   out_8785245154925367845[282] = 0;
   out_8785245154925367845[283] = 0;
   out_8785245154925367845[284] = 0;
   out_8785245154925367845[285] = 0;
   out_8785245154925367845[286] = 1;
   out_8785245154925367845[287] = 0;
   out_8785245154925367845[288] = 0;
   out_8785245154925367845[289] = 0;
   out_8785245154925367845[290] = 0;
   out_8785245154925367845[291] = 0;
   out_8785245154925367845[292] = 0;
   out_8785245154925367845[293] = 0;
   out_8785245154925367845[294] = 0;
   out_8785245154925367845[295] = 0;
   out_8785245154925367845[296] = 0;
   out_8785245154925367845[297] = 0;
   out_8785245154925367845[298] = 0;
   out_8785245154925367845[299] = 0;
   out_8785245154925367845[300] = 0;
   out_8785245154925367845[301] = 0;
   out_8785245154925367845[302] = 0;
   out_8785245154925367845[303] = 0;
   out_8785245154925367845[304] = 0;
   out_8785245154925367845[305] = 0;
   out_8785245154925367845[306] = 0;
   out_8785245154925367845[307] = 0;
   out_8785245154925367845[308] = 1;
   out_8785245154925367845[309] = 0;
   out_8785245154925367845[310] = 0;
   out_8785245154925367845[311] = 0;
   out_8785245154925367845[312] = 0;
   out_8785245154925367845[313] = 0;
   out_8785245154925367845[314] = 0;
   out_8785245154925367845[315] = 0;
   out_8785245154925367845[316] = 0;
   out_8785245154925367845[317] = 0;
   out_8785245154925367845[318] = 0;
   out_8785245154925367845[319] = 0;
   out_8785245154925367845[320] = 0;
   out_8785245154925367845[321] = 0;
   out_8785245154925367845[322] = 0;
   out_8785245154925367845[323] = 0;
   out_8785245154925367845[324] = 0;
   out_8785245154925367845[325] = 0;
   out_8785245154925367845[326] = 0;
   out_8785245154925367845[327] = 0;
   out_8785245154925367845[328] = 0;
   out_8785245154925367845[329] = 0;
   out_8785245154925367845[330] = 1;
   out_8785245154925367845[331] = 0;
   out_8785245154925367845[332] = 0;
   out_8785245154925367845[333] = 0;
   out_8785245154925367845[334] = 0;
   out_8785245154925367845[335] = 0;
   out_8785245154925367845[336] = 0;
   out_8785245154925367845[337] = 0;
   out_8785245154925367845[338] = 0;
   out_8785245154925367845[339] = 0;
   out_8785245154925367845[340] = 0;
   out_8785245154925367845[341] = 0;
   out_8785245154925367845[342] = 0;
   out_8785245154925367845[343] = 0;
   out_8785245154925367845[344] = 0;
   out_8785245154925367845[345] = 0;
   out_8785245154925367845[346] = 0;
   out_8785245154925367845[347] = 0;
   out_8785245154925367845[348] = 0;
   out_8785245154925367845[349] = 0;
   out_8785245154925367845[350] = 0;
   out_8785245154925367845[351] = 0;
   out_8785245154925367845[352] = 1;
   out_8785245154925367845[353] = 0;
   out_8785245154925367845[354] = 0;
   out_8785245154925367845[355] = 0;
   out_8785245154925367845[356] = 0;
   out_8785245154925367845[357] = 0;
   out_8785245154925367845[358] = 0;
   out_8785245154925367845[359] = 0;
   out_8785245154925367845[360] = 0;
   out_8785245154925367845[361] = 0;
   out_8785245154925367845[362] = 0;
   out_8785245154925367845[363] = 0;
   out_8785245154925367845[364] = 0;
   out_8785245154925367845[365] = 0;
   out_8785245154925367845[366] = 0;
   out_8785245154925367845[367] = 0;
   out_8785245154925367845[368] = 0;
   out_8785245154925367845[369] = 0;
   out_8785245154925367845[370] = 0;
   out_8785245154925367845[371] = 0;
   out_8785245154925367845[372] = 0;
   out_8785245154925367845[373] = 0;
   out_8785245154925367845[374] = 1;
   out_8785245154925367845[375] = 0;
   out_8785245154925367845[376] = 0;
   out_8785245154925367845[377] = 0;
   out_8785245154925367845[378] = 0;
   out_8785245154925367845[379] = 0;
   out_8785245154925367845[380] = 0;
   out_8785245154925367845[381] = 0;
   out_8785245154925367845[382] = 0;
   out_8785245154925367845[383] = 0;
   out_8785245154925367845[384] = 0;
   out_8785245154925367845[385] = 0;
   out_8785245154925367845[386] = 0;
   out_8785245154925367845[387] = 0;
   out_8785245154925367845[388] = 0;
   out_8785245154925367845[389] = 0;
   out_8785245154925367845[390] = 0;
   out_8785245154925367845[391] = 0;
   out_8785245154925367845[392] = 0;
   out_8785245154925367845[393] = 0;
   out_8785245154925367845[394] = 0;
   out_8785245154925367845[395] = 0;
   out_8785245154925367845[396] = 1;
   out_8785245154925367845[397] = 0;
   out_8785245154925367845[398] = 0;
   out_8785245154925367845[399] = 0;
   out_8785245154925367845[400] = 0;
   out_8785245154925367845[401] = 0;
   out_8785245154925367845[402] = 0;
   out_8785245154925367845[403] = 0;
   out_8785245154925367845[404] = 0;
   out_8785245154925367845[405] = 0;
   out_8785245154925367845[406] = 0;
   out_8785245154925367845[407] = 0;
   out_8785245154925367845[408] = 0;
   out_8785245154925367845[409] = 0;
   out_8785245154925367845[410] = 0;
   out_8785245154925367845[411] = 0;
   out_8785245154925367845[412] = 0;
   out_8785245154925367845[413] = 0;
   out_8785245154925367845[414] = 0;
   out_8785245154925367845[415] = 0;
   out_8785245154925367845[416] = 0;
   out_8785245154925367845[417] = 0;
   out_8785245154925367845[418] = 1;
   out_8785245154925367845[419] = 0;
   out_8785245154925367845[420] = 0;
   out_8785245154925367845[421] = 0;
   out_8785245154925367845[422] = 0;
   out_8785245154925367845[423] = 0;
   out_8785245154925367845[424] = 0;
   out_8785245154925367845[425] = 0;
   out_8785245154925367845[426] = 0;
   out_8785245154925367845[427] = 0;
   out_8785245154925367845[428] = 0;
   out_8785245154925367845[429] = 0;
   out_8785245154925367845[430] = 0;
   out_8785245154925367845[431] = 0;
   out_8785245154925367845[432] = 0;
   out_8785245154925367845[433] = 0;
   out_8785245154925367845[434] = 0;
   out_8785245154925367845[435] = 0;
   out_8785245154925367845[436] = 0;
   out_8785245154925367845[437] = 0;
   out_8785245154925367845[438] = 0;
   out_8785245154925367845[439] = 0;
   out_8785245154925367845[440] = 1;
}
void h_4(double *state, double *unused, double *out_6655938146560302661) {
   out_6655938146560302661[0] = state[10] + state[13];
   out_6655938146560302661[1] = state[11] + state[14];
   out_6655938146560302661[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4586688220523086789) {
   out_4586688220523086789[0] = 0;
   out_4586688220523086789[1] = 0;
   out_4586688220523086789[2] = 0;
   out_4586688220523086789[3] = 0;
   out_4586688220523086789[4] = 0;
   out_4586688220523086789[5] = 0;
   out_4586688220523086789[6] = 0;
   out_4586688220523086789[7] = 0;
   out_4586688220523086789[8] = 0;
   out_4586688220523086789[9] = 0;
   out_4586688220523086789[10] = 1;
   out_4586688220523086789[11] = 0;
   out_4586688220523086789[12] = 0;
   out_4586688220523086789[13] = 1;
   out_4586688220523086789[14] = 0;
   out_4586688220523086789[15] = 0;
   out_4586688220523086789[16] = 0;
   out_4586688220523086789[17] = 0;
   out_4586688220523086789[18] = 0;
   out_4586688220523086789[19] = 0;
   out_4586688220523086789[20] = 0;
   out_4586688220523086789[21] = 0;
   out_4586688220523086789[22] = 0;
   out_4586688220523086789[23] = 0;
   out_4586688220523086789[24] = 0;
   out_4586688220523086789[25] = 0;
   out_4586688220523086789[26] = 0;
   out_4586688220523086789[27] = 0;
   out_4586688220523086789[28] = 0;
   out_4586688220523086789[29] = 0;
   out_4586688220523086789[30] = 0;
   out_4586688220523086789[31] = 0;
   out_4586688220523086789[32] = 0;
   out_4586688220523086789[33] = 1;
   out_4586688220523086789[34] = 0;
   out_4586688220523086789[35] = 0;
   out_4586688220523086789[36] = 1;
   out_4586688220523086789[37] = 0;
   out_4586688220523086789[38] = 0;
   out_4586688220523086789[39] = 0;
   out_4586688220523086789[40] = 0;
   out_4586688220523086789[41] = 0;
   out_4586688220523086789[42] = 0;
   out_4586688220523086789[43] = 0;
   out_4586688220523086789[44] = 0;
   out_4586688220523086789[45] = 0;
   out_4586688220523086789[46] = 0;
   out_4586688220523086789[47] = 0;
   out_4586688220523086789[48] = 0;
   out_4586688220523086789[49] = 0;
   out_4586688220523086789[50] = 0;
   out_4586688220523086789[51] = 0;
   out_4586688220523086789[52] = 0;
   out_4586688220523086789[53] = 0;
   out_4586688220523086789[54] = 0;
   out_4586688220523086789[55] = 0;
   out_4586688220523086789[56] = 1;
   out_4586688220523086789[57] = 0;
   out_4586688220523086789[58] = 0;
   out_4586688220523086789[59] = 1;
   out_4586688220523086789[60] = 0;
   out_4586688220523086789[61] = 0;
   out_4586688220523086789[62] = 0;
   out_4586688220523086789[63] = 0;
   out_4586688220523086789[64] = 0;
   out_4586688220523086789[65] = 0;
}
void h_9(double *state, double *unused, double *out_4124840261630090276) {
   out_4124840261630090276[0] = state[10];
   out_4124840261630090276[1] = state[11];
   out_4124840261630090276[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4345498573893496144) {
   out_4345498573893496144[0] = 0;
   out_4345498573893496144[1] = 0;
   out_4345498573893496144[2] = 0;
   out_4345498573893496144[3] = 0;
   out_4345498573893496144[4] = 0;
   out_4345498573893496144[5] = 0;
   out_4345498573893496144[6] = 0;
   out_4345498573893496144[7] = 0;
   out_4345498573893496144[8] = 0;
   out_4345498573893496144[9] = 0;
   out_4345498573893496144[10] = 1;
   out_4345498573893496144[11] = 0;
   out_4345498573893496144[12] = 0;
   out_4345498573893496144[13] = 0;
   out_4345498573893496144[14] = 0;
   out_4345498573893496144[15] = 0;
   out_4345498573893496144[16] = 0;
   out_4345498573893496144[17] = 0;
   out_4345498573893496144[18] = 0;
   out_4345498573893496144[19] = 0;
   out_4345498573893496144[20] = 0;
   out_4345498573893496144[21] = 0;
   out_4345498573893496144[22] = 0;
   out_4345498573893496144[23] = 0;
   out_4345498573893496144[24] = 0;
   out_4345498573893496144[25] = 0;
   out_4345498573893496144[26] = 0;
   out_4345498573893496144[27] = 0;
   out_4345498573893496144[28] = 0;
   out_4345498573893496144[29] = 0;
   out_4345498573893496144[30] = 0;
   out_4345498573893496144[31] = 0;
   out_4345498573893496144[32] = 0;
   out_4345498573893496144[33] = 1;
   out_4345498573893496144[34] = 0;
   out_4345498573893496144[35] = 0;
   out_4345498573893496144[36] = 0;
   out_4345498573893496144[37] = 0;
   out_4345498573893496144[38] = 0;
   out_4345498573893496144[39] = 0;
   out_4345498573893496144[40] = 0;
   out_4345498573893496144[41] = 0;
   out_4345498573893496144[42] = 0;
   out_4345498573893496144[43] = 0;
   out_4345498573893496144[44] = 0;
   out_4345498573893496144[45] = 0;
   out_4345498573893496144[46] = 0;
   out_4345498573893496144[47] = 0;
   out_4345498573893496144[48] = 0;
   out_4345498573893496144[49] = 0;
   out_4345498573893496144[50] = 0;
   out_4345498573893496144[51] = 0;
   out_4345498573893496144[52] = 0;
   out_4345498573893496144[53] = 0;
   out_4345498573893496144[54] = 0;
   out_4345498573893496144[55] = 0;
   out_4345498573893496144[56] = 1;
   out_4345498573893496144[57] = 0;
   out_4345498573893496144[58] = 0;
   out_4345498573893496144[59] = 0;
   out_4345498573893496144[60] = 0;
   out_4345498573893496144[61] = 0;
   out_4345498573893496144[62] = 0;
   out_4345498573893496144[63] = 0;
   out_4345498573893496144[64] = 0;
   out_4345498573893496144[65] = 0;
}
void h_10(double *state, double *unused, double *out_3013628431158048691) {
   out_3013628431158048691[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3013628431158048691[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3013628431158048691[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_762581265572162243) {
   out_762581265572162243[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_762581265572162243[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_762581265572162243[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_762581265572162243[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_762581265572162243[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_762581265572162243[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_762581265572162243[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_762581265572162243[7] = 0;
   out_762581265572162243[8] = 0;
   out_762581265572162243[9] = 0;
   out_762581265572162243[10] = 0;
   out_762581265572162243[11] = 0;
   out_762581265572162243[12] = 0;
   out_762581265572162243[13] = 0;
   out_762581265572162243[14] = 0;
   out_762581265572162243[15] = 0;
   out_762581265572162243[16] = 1;
   out_762581265572162243[17] = 0;
   out_762581265572162243[18] = 0;
   out_762581265572162243[19] = 1;
   out_762581265572162243[20] = 0;
   out_762581265572162243[21] = 0;
   out_762581265572162243[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_762581265572162243[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_762581265572162243[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_762581265572162243[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_762581265572162243[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_762581265572162243[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_762581265572162243[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_762581265572162243[29] = 0;
   out_762581265572162243[30] = 0;
   out_762581265572162243[31] = 0;
   out_762581265572162243[32] = 0;
   out_762581265572162243[33] = 0;
   out_762581265572162243[34] = 0;
   out_762581265572162243[35] = 0;
   out_762581265572162243[36] = 0;
   out_762581265572162243[37] = 0;
   out_762581265572162243[38] = 0;
   out_762581265572162243[39] = 1;
   out_762581265572162243[40] = 0;
   out_762581265572162243[41] = 0;
   out_762581265572162243[42] = 1;
   out_762581265572162243[43] = 0;
   out_762581265572162243[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_762581265572162243[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_762581265572162243[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_762581265572162243[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_762581265572162243[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_762581265572162243[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_762581265572162243[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_762581265572162243[51] = 0;
   out_762581265572162243[52] = 0;
   out_762581265572162243[53] = 0;
   out_762581265572162243[54] = 0;
   out_762581265572162243[55] = 0;
   out_762581265572162243[56] = 0;
   out_762581265572162243[57] = 0;
   out_762581265572162243[58] = 0;
   out_762581265572162243[59] = 0;
   out_762581265572162243[60] = 0;
   out_762581265572162243[61] = 0;
   out_762581265572162243[62] = 1;
   out_762581265572162243[63] = 0;
   out_762581265572162243[64] = 0;
   out_762581265572162243[65] = 1;
}
void h_12(double *state, double *unused, double *out_5169424638988699366) {
   out_5169424638988699366[0] = state[0];
   out_5169424638988699366[1] = state[1];
   out_5169424638988699366[2] = state[2];
}
void H_12(double *state, double *unused, double *out_432768187508875006) {
   out_432768187508875006[0] = 1;
   out_432768187508875006[1] = 0;
   out_432768187508875006[2] = 0;
   out_432768187508875006[3] = 0;
   out_432768187508875006[4] = 0;
   out_432768187508875006[5] = 0;
   out_432768187508875006[6] = 0;
   out_432768187508875006[7] = 0;
   out_432768187508875006[8] = 0;
   out_432768187508875006[9] = 0;
   out_432768187508875006[10] = 0;
   out_432768187508875006[11] = 0;
   out_432768187508875006[12] = 0;
   out_432768187508875006[13] = 0;
   out_432768187508875006[14] = 0;
   out_432768187508875006[15] = 0;
   out_432768187508875006[16] = 0;
   out_432768187508875006[17] = 0;
   out_432768187508875006[18] = 0;
   out_432768187508875006[19] = 0;
   out_432768187508875006[20] = 0;
   out_432768187508875006[21] = 0;
   out_432768187508875006[22] = 0;
   out_432768187508875006[23] = 1;
   out_432768187508875006[24] = 0;
   out_432768187508875006[25] = 0;
   out_432768187508875006[26] = 0;
   out_432768187508875006[27] = 0;
   out_432768187508875006[28] = 0;
   out_432768187508875006[29] = 0;
   out_432768187508875006[30] = 0;
   out_432768187508875006[31] = 0;
   out_432768187508875006[32] = 0;
   out_432768187508875006[33] = 0;
   out_432768187508875006[34] = 0;
   out_432768187508875006[35] = 0;
   out_432768187508875006[36] = 0;
   out_432768187508875006[37] = 0;
   out_432768187508875006[38] = 0;
   out_432768187508875006[39] = 0;
   out_432768187508875006[40] = 0;
   out_432768187508875006[41] = 0;
   out_432768187508875006[42] = 0;
   out_432768187508875006[43] = 0;
   out_432768187508875006[44] = 0;
   out_432768187508875006[45] = 0;
   out_432768187508875006[46] = 1;
   out_432768187508875006[47] = 0;
   out_432768187508875006[48] = 0;
   out_432768187508875006[49] = 0;
   out_432768187508875006[50] = 0;
   out_432768187508875006[51] = 0;
   out_432768187508875006[52] = 0;
   out_432768187508875006[53] = 0;
   out_432768187508875006[54] = 0;
   out_432768187508875006[55] = 0;
   out_432768187508875006[56] = 0;
   out_432768187508875006[57] = 0;
   out_432768187508875006[58] = 0;
   out_432768187508875006[59] = 0;
   out_432768187508875006[60] = 0;
   out_432768187508875006[61] = 0;
   out_432768187508875006[62] = 0;
   out_432768187508875006[63] = 0;
   out_432768187508875006[64] = 0;
   out_432768187508875006[65] = 0;
}
void h_35(double *state, double *unused, double *out_7013680659001227585) {
   out_7013680659001227585[0] = state[7];
   out_7013680659001227585[1] = state[8];
   out_7013680659001227585[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1220026163150479413) {
   out_1220026163150479413[0] = 0;
   out_1220026163150479413[1] = 0;
   out_1220026163150479413[2] = 0;
   out_1220026163150479413[3] = 0;
   out_1220026163150479413[4] = 0;
   out_1220026163150479413[5] = 0;
   out_1220026163150479413[6] = 0;
   out_1220026163150479413[7] = 1;
   out_1220026163150479413[8] = 0;
   out_1220026163150479413[9] = 0;
   out_1220026163150479413[10] = 0;
   out_1220026163150479413[11] = 0;
   out_1220026163150479413[12] = 0;
   out_1220026163150479413[13] = 0;
   out_1220026163150479413[14] = 0;
   out_1220026163150479413[15] = 0;
   out_1220026163150479413[16] = 0;
   out_1220026163150479413[17] = 0;
   out_1220026163150479413[18] = 0;
   out_1220026163150479413[19] = 0;
   out_1220026163150479413[20] = 0;
   out_1220026163150479413[21] = 0;
   out_1220026163150479413[22] = 0;
   out_1220026163150479413[23] = 0;
   out_1220026163150479413[24] = 0;
   out_1220026163150479413[25] = 0;
   out_1220026163150479413[26] = 0;
   out_1220026163150479413[27] = 0;
   out_1220026163150479413[28] = 0;
   out_1220026163150479413[29] = 0;
   out_1220026163150479413[30] = 1;
   out_1220026163150479413[31] = 0;
   out_1220026163150479413[32] = 0;
   out_1220026163150479413[33] = 0;
   out_1220026163150479413[34] = 0;
   out_1220026163150479413[35] = 0;
   out_1220026163150479413[36] = 0;
   out_1220026163150479413[37] = 0;
   out_1220026163150479413[38] = 0;
   out_1220026163150479413[39] = 0;
   out_1220026163150479413[40] = 0;
   out_1220026163150479413[41] = 0;
   out_1220026163150479413[42] = 0;
   out_1220026163150479413[43] = 0;
   out_1220026163150479413[44] = 0;
   out_1220026163150479413[45] = 0;
   out_1220026163150479413[46] = 0;
   out_1220026163150479413[47] = 0;
   out_1220026163150479413[48] = 0;
   out_1220026163150479413[49] = 0;
   out_1220026163150479413[50] = 0;
   out_1220026163150479413[51] = 0;
   out_1220026163150479413[52] = 0;
   out_1220026163150479413[53] = 1;
   out_1220026163150479413[54] = 0;
   out_1220026163150479413[55] = 0;
   out_1220026163150479413[56] = 0;
   out_1220026163150479413[57] = 0;
   out_1220026163150479413[58] = 0;
   out_1220026163150479413[59] = 0;
   out_1220026163150479413[60] = 0;
   out_1220026163150479413[61] = 0;
   out_1220026163150479413[62] = 0;
   out_1220026163150479413[63] = 0;
   out_1220026163150479413[64] = 0;
   out_1220026163150479413[65] = 0;
}
void h_32(double *state, double *unused, double *out_4960927998102533383) {
   out_4960927998102533383[0] = state[3];
   out_4960927998102533383[1] = state[4];
   out_4960927998102533383[2] = state[5];
   out_4960927998102533383[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4581278209057133145) {
   out_4581278209057133145[0] = 0;
   out_4581278209057133145[1] = 0;
   out_4581278209057133145[2] = 0;
   out_4581278209057133145[3] = 1;
   out_4581278209057133145[4] = 0;
   out_4581278209057133145[5] = 0;
   out_4581278209057133145[6] = 0;
   out_4581278209057133145[7] = 0;
   out_4581278209057133145[8] = 0;
   out_4581278209057133145[9] = 0;
   out_4581278209057133145[10] = 0;
   out_4581278209057133145[11] = 0;
   out_4581278209057133145[12] = 0;
   out_4581278209057133145[13] = 0;
   out_4581278209057133145[14] = 0;
   out_4581278209057133145[15] = 0;
   out_4581278209057133145[16] = 0;
   out_4581278209057133145[17] = 0;
   out_4581278209057133145[18] = 0;
   out_4581278209057133145[19] = 0;
   out_4581278209057133145[20] = 0;
   out_4581278209057133145[21] = 0;
   out_4581278209057133145[22] = 0;
   out_4581278209057133145[23] = 0;
   out_4581278209057133145[24] = 0;
   out_4581278209057133145[25] = 0;
   out_4581278209057133145[26] = 1;
   out_4581278209057133145[27] = 0;
   out_4581278209057133145[28] = 0;
   out_4581278209057133145[29] = 0;
   out_4581278209057133145[30] = 0;
   out_4581278209057133145[31] = 0;
   out_4581278209057133145[32] = 0;
   out_4581278209057133145[33] = 0;
   out_4581278209057133145[34] = 0;
   out_4581278209057133145[35] = 0;
   out_4581278209057133145[36] = 0;
   out_4581278209057133145[37] = 0;
   out_4581278209057133145[38] = 0;
   out_4581278209057133145[39] = 0;
   out_4581278209057133145[40] = 0;
   out_4581278209057133145[41] = 0;
   out_4581278209057133145[42] = 0;
   out_4581278209057133145[43] = 0;
   out_4581278209057133145[44] = 0;
   out_4581278209057133145[45] = 0;
   out_4581278209057133145[46] = 0;
   out_4581278209057133145[47] = 0;
   out_4581278209057133145[48] = 0;
   out_4581278209057133145[49] = 1;
   out_4581278209057133145[50] = 0;
   out_4581278209057133145[51] = 0;
   out_4581278209057133145[52] = 0;
   out_4581278209057133145[53] = 0;
   out_4581278209057133145[54] = 0;
   out_4581278209057133145[55] = 0;
   out_4581278209057133145[56] = 0;
   out_4581278209057133145[57] = 0;
   out_4581278209057133145[58] = 0;
   out_4581278209057133145[59] = 0;
   out_4581278209057133145[60] = 0;
   out_4581278209057133145[61] = 0;
   out_4581278209057133145[62] = 0;
   out_4581278209057133145[63] = 0;
   out_4581278209057133145[64] = 0;
   out_4581278209057133145[65] = 0;
   out_4581278209057133145[66] = 0;
   out_4581278209057133145[67] = 0;
   out_4581278209057133145[68] = 0;
   out_4581278209057133145[69] = 0;
   out_4581278209057133145[70] = 0;
   out_4581278209057133145[71] = 0;
   out_4581278209057133145[72] = 1;
   out_4581278209057133145[73] = 0;
   out_4581278209057133145[74] = 0;
   out_4581278209057133145[75] = 0;
   out_4581278209057133145[76] = 0;
   out_4581278209057133145[77] = 0;
   out_4581278209057133145[78] = 0;
   out_4581278209057133145[79] = 0;
   out_4581278209057133145[80] = 0;
   out_4581278209057133145[81] = 0;
   out_4581278209057133145[82] = 0;
   out_4581278209057133145[83] = 0;
   out_4581278209057133145[84] = 0;
   out_4581278209057133145[85] = 0;
   out_4581278209057133145[86] = 0;
   out_4581278209057133145[87] = 0;
}
void h_13(double *state, double *unused, double *out_8317077396153969626) {
   out_8317077396153969626[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8317077396153969626[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8317077396153969626[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8621376804059329243) {
   out_8621376804059329243[0] = 0;
   out_8621376804059329243[1] = 0;
   out_8621376804059329243[2] = 0;
   out_8621376804059329243[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8621376804059329243[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8621376804059329243[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8621376804059329243[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8621376804059329243[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8621376804059329243[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8621376804059329243[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8621376804059329243[10] = 0;
   out_8621376804059329243[11] = 0;
   out_8621376804059329243[12] = 0;
   out_8621376804059329243[13] = 0;
   out_8621376804059329243[14] = 0;
   out_8621376804059329243[15] = 0;
   out_8621376804059329243[16] = 0;
   out_8621376804059329243[17] = 0;
   out_8621376804059329243[18] = 0;
   out_8621376804059329243[19] = 0;
   out_8621376804059329243[20] = 0;
   out_8621376804059329243[21] = 0;
   out_8621376804059329243[22] = 0;
   out_8621376804059329243[23] = 0;
   out_8621376804059329243[24] = 0;
   out_8621376804059329243[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8621376804059329243[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8621376804059329243[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8621376804059329243[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8621376804059329243[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8621376804059329243[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8621376804059329243[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8621376804059329243[32] = 0;
   out_8621376804059329243[33] = 0;
   out_8621376804059329243[34] = 0;
   out_8621376804059329243[35] = 0;
   out_8621376804059329243[36] = 0;
   out_8621376804059329243[37] = 0;
   out_8621376804059329243[38] = 0;
   out_8621376804059329243[39] = 0;
   out_8621376804059329243[40] = 0;
   out_8621376804059329243[41] = 0;
   out_8621376804059329243[42] = 0;
   out_8621376804059329243[43] = 0;
   out_8621376804059329243[44] = 0;
   out_8621376804059329243[45] = 0;
   out_8621376804059329243[46] = 0;
   out_8621376804059329243[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8621376804059329243[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8621376804059329243[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8621376804059329243[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8621376804059329243[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8621376804059329243[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8621376804059329243[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8621376804059329243[54] = 0;
   out_8621376804059329243[55] = 0;
   out_8621376804059329243[56] = 0;
   out_8621376804059329243[57] = 0;
   out_8621376804059329243[58] = 0;
   out_8621376804059329243[59] = 0;
   out_8621376804059329243[60] = 0;
   out_8621376804059329243[61] = 0;
   out_8621376804059329243[62] = 0;
   out_8621376804059329243[63] = 0;
   out_8621376804059329243[64] = 0;
   out_8621376804059329243[65] = 0;
}
void h_14(double *state, double *unused, double *out_4124840261630090276) {
   out_4124840261630090276[0] = state[10];
   out_4124840261630090276[1] = state[11];
   out_4124840261630090276[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4345498573893496144) {
   out_4345498573893496144[0] = 0;
   out_4345498573893496144[1] = 0;
   out_4345498573893496144[2] = 0;
   out_4345498573893496144[3] = 0;
   out_4345498573893496144[4] = 0;
   out_4345498573893496144[5] = 0;
   out_4345498573893496144[6] = 0;
   out_4345498573893496144[7] = 0;
   out_4345498573893496144[8] = 0;
   out_4345498573893496144[9] = 0;
   out_4345498573893496144[10] = 1;
   out_4345498573893496144[11] = 0;
   out_4345498573893496144[12] = 0;
   out_4345498573893496144[13] = 0;
   out_4345498573893496144[14] = 0;
   out_4345498573893496144[15] = 0;
   out_4345498573893496144[16] = 0;
   out_4345498573893496144[17] = 0;
   out_4345498573893496144[18] = 0;
   out_4345498573893496144[19] = 0;
   out_4345498573893496144[20] = 0;
   out_4345498573893496144[21] = 0;
   out_4345498573893496144[22] = 0;
   out_4345498573893496144[23] = 0;
   out_4345498573893496144[24] = 0;
   out_4345498573893496144[25] = 0;
   out_4345498573893496144[26] = 0;
   out_4345498573893496144[27] = 0;
   out_4345498573893496144[28] = 0;
   out_4345498573893496144[29] = 0;
   out_4345498573893496144[30] = 0;
   out_4345498573893496144[31] = 0;
   out_4345498573893496144[32] = 0;
   out_4345498573893496144[33] = 1;
   out_4345498573893496144[34] = 0;
   out_4345498573893496144[35] = 0;
   out_4345498573893496144[36] = 0;
   out_4345498573893496144[37] = 0;
   out_4345498573893496144[38] = 0;
   out_4345498573893496144[39] = 0;
   out_4345498573893496144[40] = 0;
   out_4345498573893496144[41] = 0;
   out_4345498573893496144[42] = 0;
   out_4345498573893496144[43] = 0;
   out_4345498573893496144[44] = 0;
   out_4345498573893496144[45] = 0;
   out_4345498573893496144[46] = 0;
   out_4345498573893496144[47] = 0;
   out_4345498573893496144[48] = 0;
   out_4345498573893496144[49] = 0;
   out_4345498573893496144[50] = 0;
   out_4345498573893496144[51] = 0;
   out_4345498573893496144[52] = 0;
   out_4345498573893496144[53] = 0;
   out_4345498573893496144[54] = 0;
   out_4345498573893496144[55] = 0;
   out_4345498573893496144[56] = 1;
   out_4345498573893496144[57] = 0;
   out_4345498573893496144[58] = 0;
   out_4345498573893496144[59] = 0;
   out_4345498573893496144[60] = 0;
   out_4345498573893496144[61] = 0;
   out_4345498573893496144[62] = 0;
   out_4345498573893496144[63] = 0;
   out_4345498573893496144[64] = 0;
   out_4345498573893496144[65] = 0;
}
void h_33(double *state, double *unused, double *out_6683315253473899657) {
   out_6683315253473899657[0] = state[16];
   out_6683315253473899657[1] = state[17];
   out_6683315253473899657[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1930530841488378191) {
   out_1930530841488378191[0] = 0;
   out_1930530841488378191[1] = 0;
   out_1930530841488378191[2] = 0;
   out_1930530841488378191[3] = 0;
   out_1930530841488378191[4] = 0;
   out_1930530841488378191[5] = 0;
   out_1930530841488378191[6] = 0;
   out_1930530841488378191[7] = 0;
   out_1930530841488378191[8] = 0;
   out_1930530841488378191[9] = 0;
   out_1930530841488378191[10] = 0;
   out_1930530841488378191[11] = 0;
   out_1930530841488378191[12] = 0;
   out_1930530841488378191[13] = 0;
   out_1930530841488378191[14] = 0;
   out_1930530841488378191[15] = 0;
   out_1930530841488378191[16] = 1;
   out_1930530841488378191[17] = 0;
   out_1930530841488378191[18] = 0;
   out_1930530841488378191[19] = 0;
   out_1930530841488378191[20] = 0;
   out_1930530841488378191[21] = 0;
   out_1930530841488378191[22] = 0;
   out_1930530841488378191[23] = 0;
   out_1930530841488378191[24] = 0;
   out_1930530841488378191[25] = 0;
   out_1930530841488378191[26] = 0;
   out_1930530841488378191[27] = 0;
   out_1930530841488378191[28] = 0;
   out_1930530841488378191[29] = 0;
   out_1930530841488378191[30] = 0;
   out_1930530841488378191[31] = 0;
   out_1930530841488378191[32] = 0;
   out_1930530841488378191[33] = 0;
   out_1930530841488378191[34] = 0;
   out_1930530841488378191[35] = 0;
   out_1930530841488378191[36] = 0;
   out_1930530841488378191[37] = 0;
   out_1930530841488378191[38] = 0;
   out_1930530841488378191[39] = 1;
   out_1930530841488378191[40] = 0;
   out_1930530841488378191[41] = 0;
   out_1930530841488378191[42] = 0;
   out_1930530841488378191[43] = 0;
   out_1930530841488378191[44] = 0;
   out_1930530841488378191[45] = 0;
   out_1930530841488378191[46] = 0;
   out_1930530841488378191[47] = 0;
   out_1930530841488378191[48] = 0;
   out_1930530841488378191[49] = 0;
   out_1930530841488378191[50] = 0;
   out_1930530841488378191[51] = 0;
   out_1930530841488378191[52] = 0;
   out_1930530841488378191[53] = 0;
   out_1930530841488378191[54] = 0;
   out_1930530841488378191[55] = 0;
   out_1930530841488378191[56] = 0;
   out_1930530841488378191[57] = 0;
   out_1930530841488378191[58] = 0;
   out_1930530841488378191[59] = 0;
   out_1930530841488378191[60] = 0;
   out_1930530841488378191[61] = 0;
   out_1930530841488378191[62] = 1;
   out_1930530841488378191[63] = 0;
   out_1930530841488378191[64] = 0;
   out_1930530841488378191[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2195801997734315225) {
  H(in_vec, out_2195801997734315225);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7885382450672140263) {
  err_fun(nom_x, delta_x, out_7885382450672140263);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8328284484611196913) {
  inv_err_fun(nom_x, true_x, out_8328284484611196913);
}
void live_H_mod_fun(double *state, double *out_6275450067896889819) {
  H_mod_fun(state, out_6275450067896889819);
}
void live_f_fun(double *state, double dt, double *out_602314135086256032) {
  f_fun(state,  dt, out_602314135086256032);
}
void live_F_fun(double *state, double dt, double *out_8785245154925367845) {
  F_fun(state,  dt, out_8785245154925367845);
}
void live_h_4(double *state, double *unused, double *out_6655938146560302661) {
  h_4(state, unused, out_6655938146560302661);
}
void live_H_4(double *state, double *unused, double *out_4586688220523086789) {
  H_4(state, unused, out_4586688220523086789);
}
void live_h_9(double *state, double *unused, double *out_4124840261630090276) {
  h_9(state, unused, out_4124840261630090276);
}
void live_H_9(double *state, double *unused, double *out_4345498573893496144) {
  H_9(state, unused, out_4345498573893496144);
}
void live_h_10(double *state, double *unused, double *out_3013628431158048691) {
  h_10(state, unused, out_3013628431158048691);
}
void live_H_10(double *state, double *unused, double *out_762581265572162243) {
  H_10(state, unused, out_762581265572162243);
}
void live_h_12(double *state, double *unused, double *out_5169424638988699366) {
  h_12(state, unused, out_5169424638988699366);
}
void live_H_12(double *state, double *unused, double *out_432768187508875006) {
  H_12(state, unused, out_432768187508875006);
}
void live_h_35(double *state, double *unused, double *out_7013680659001227585) {
  h_35(state, unused, out_7013680659001227585);
}
void live_H_35(double *state, double *unused, double *out_1220026163150479413) {
  H_35(state, unused, out_1220026163150479413);
}
void live_h_32(double *state, double *unused, double *out_4960927998102533383) {
  h_32(state, unused, out_4960927998102533383);
}
void live_H_32(double *state, double *unused, double *out_4581278209057133145) {
  H_32(state, unused, out_4581278209057133145);
}
void live_h_13(double *state, double *unused, double *out_8317077396153969626) {
  h_13(state, unused, out_8317077396153969626);
}
void live_H_13(double *state, double *unused, double *out_8621376804059329243) {
  H_13(state, unused, out_8621376804059329243);
}
void live_h_14(double *state, double *unused, double *out_4124840261630090276) {
  h_14(state, unused, out_4124840261630090276);
}
void live_H_14(double *state, double *unused, double *out_4345498573893496144) {
  H_14(state, unused, out_4345498573893496144);
}
void live_h_33(double *state, double *unused, double *out_6683315253473899657) {
  h_33(state, unused, out_6683315253473899657);
}
void live_H_33(double *state, double *unused, double *out_1930530841488378191) {
  H_33(state, unused, out_1930530841488378191);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
